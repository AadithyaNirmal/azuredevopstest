# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  actions: write       # Necessary to cancel workflow executions
  checks: write        # Necessary to write reports
  pull-requests: write # Necessary to comment on PRs
  contents: read
  packages: write

jobs:
  build:

    runs-on: ubuntu-latest
    environment: dev

    steps:
    - uses: actions/checkout@v4
    
    - name: Get OIDC token
      run: |
        value=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq '.value')
        token=$(curl -X POST -H "Content-Type: application/json" -d "{\"oidc_token\":$value, \"service_slug\":\"gh-actions\"}" https://api.cloudsmith.io/openid/demo/ | jq -r '.token')
        echo "OIDC_TOKEN=$token" >> $GITHUB_ENV
        curl --request GET --url https://api.cloudsmith.io/v1/user/self/ --header "X-Api-Key:Bearer $token" --header 'accept: application/json'
        
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest --index-url https://$CS_SERVICE:$OIDC_TOKEN@dl.cloudsmith.io/basic/demo/gha-demo/python/simple/
        if [ -f requirements.txt ]; then pip install -r requirements.txt --index-url https://$CS_SERVICE:$OIDC_TOKEN@dl.cloudsmith.io/basic/demo/gha-demo/python/simple/; fi
      env: 
        CS_SERVICE: ${{ vars.CS_SERVICE }}
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest
