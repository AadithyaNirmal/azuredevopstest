# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- dev

pool:
  vmImage: 'ubuntu-latest'
name: ${Date:yyyMMdd}${Rev:.r}
variables:
  - group: aws_variables
  - name: CODECOMMIT_PK
    value: AAAAB3NzaC1yc2EAAAADAQABAAABgQDHdntTH+oVRP9Oi0nwUIpisEE967Qnu4TV7C1xTqB33QQib8NKDHytaCHVdvRuO1kyzeB9ld7lRucN1aKi955Ef/MokqQ3iVn9TU9KiNGUOVerRDudotm+1uC9XXEvV8T+KX2hg6FLCa0aOutkmxjT0OIPiiwdNWZwGr4xmOGv9GKhqbc8MyXzws/U58Lbii3uP0Fb6X3oYt9wrCabycSioDRP4WI8e/EQ2MT0vp9bySNSwYtSBNNHTz+c8hUFa6aEH+qDAq8qh8yZ4NwB05YDlrwbqmHDdsP9MJwUsKDELLYgxsqdiVpDigzAJopo5MmeBM4ILg1zgiuREEb/nRFUdM1sl52CJi5lnPiczCaHaTIRqxMQjdKF31KZXYu+9ufDVXLCrYokB2YTKMTufBHy9i2zBpWfdMjx4zjOm+o09bg5Sz9wvEdRh9B8t82SXlA9TJlNKEgHw2nzIehnsOmygr9aqQf1+OTsLU1ejapppMOCVh0cjnvUTA/qWC9Yv3E=
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
 
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'
- script: |
    git checkout ${BUILD_SOURCEBRANCHNAME}
    AWS_CODECOMMIT_REPO="ssh://git-codecommit.${CODECOMMIT_REGION}.amazonaws.com/v1/repos/${CODECOMMIT_NAME}"
    mkdir ~/.ssh
    echo ${CODECOMMIT_PK} > ~/.ssh/codecommit_rsa.tmp
    cat ~/.ssh/codecommit_rsa.tmp
    base64 -d ~/.ssh/codecommit_rsa.tmp > ~/.ssh/aws_rsa
    cat ~/.ssh/aws_rsa
    chmod 400 ~/.ssh/aws_rsa
    cat <<EOF > ~/.ssh/config
      Host git-codecommit.*.amazonaws.com
      User ${CODECOMMIT_USER}
      IdentityFile ~/.ssh/aws_rsa
    EOF
    echo ${CODECOMMIT_USER}
    set +e
    ssh -o StrictHostKeyChecking=no git-codecommit.${CODECOMMIT_REGION}.amazonaws.com
    set -e
    git remote set-url origin --push ${AWS_CODECOMMIT_REPO}
    git push origin ${BUILD_SOURCEBRANCHNAME}
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import sys
      print ('Executing script file is:', str(sys.argv[0]))
      print ('The arguments are:', str(sys.argv))
      import argparse
      parser = argparse.ArgumentParser()
      parser.add_argument("--world", help="Provide the name of the world to greet.")
      args = parser.parse_args()
      print ('Hello ', args.world)
    arguments: --world Venus

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'