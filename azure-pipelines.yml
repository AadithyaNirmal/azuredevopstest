# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- dev

pool:
  vmImage: 'ubuntu-latest'
name: ${Date:yyyMMdd}${Rev:.r}
variables:
  - group: aws_variables
  - name: CODECOMMIT_PK
    value: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS1iM0JsYm5OemFDMXJaWGt0ZGpFQUFBQUFCRzV2Ym1VQUFBQUVibTl1WlFBQUFBQUFBQUFCQUFBQmx3QUFBQWR6YzJndGNuTmhBQUFBQXdFQUFRQUFBWUVBb1lGYlpUSUNNVXM0VTZPRTgyaUVZUFpET0pnMDd4UmpUMDltOFY4WFFSSUZ6RGwyQkpramgvR0ZGZURuc0RJQmpzMGhOaTdEZGVPSFBHdXJuTHkrTG84cGJqUmM3akQ1OGY2VVJwZHhIRlpqc0VjVTZPY21nbVBKMDFHNGlXdktGUkkyUDluaHZZZU1BM3JJcHNTRTNZeDJLVW5YaXNWMWhDMFdDQWVFclhkeVovUmF5aTkzeHlxZ1F5ZU1PRytRcXBWTFBKZEJ0U2NRUjN6c2tGODFyemtWeU8zRUgrTnYzYXNuUXNvMTBITW9JdTJBa1EyclpjQUJwQmpWbVFYcFU3S2Z3TnU3UWMwN082MldxUmd4SmJWRUFvdStyZy81TjJxb1lXcEFOa2lieFMxQlF1MG90WllURXFWZkJhYkRibVo2UUVYbklRaUkrT1lzWGF1R2xKeGp3UlVlSmViOWp1OUdOaDBtRHVTcTdLUXZSU29xUkZFUUJFL0hBaHF6VGJRTjZSNWhqZ0t2SHYxcFA2L0FZamJhUGpYWHBDbmZIbEVjL0MxdGRCbW0rOWU5M3RFdllQeXRTN1NqN3BUWXZHL3pUZzNZSkhwa0h1d00zY3I5TnJVZDZzQWx0QktUK1Q5ZGdBRVdtVE45OGR0Q2dXdm12R2ZIcVp3UVJiL2RBQUFGb0twYnhheXFXOFdzQUFBQUIzTnphQzF5YzJFQUFBR0JBS0dCVzJVeUFqRkxPRk9qaFBOb2hHRDJRemlZTk84VVkwOVBadkZmRjBFU0JjdzVkZ1NaSTRmeGhSWGc1N0F5QVk3TklUWXV3M1hqaHp4cnE1eTh2aTZQS1c0MFhPNHcrZkgrbEVhWGNSeFdZN0JIRk9qbkpvSmp5ZE5SdUlscnloVVNOai9aNGIySGpBTjZ5S2JFaE4yTWRpbEoxNHJGZFlRdEZnZ0hoSzEzY21mMFdzb3ZkOGNxb0VNbmpEaHZrS3FWU3p5WFFiVW5FRWQ4N0pCZk5hODVGY2p0eEIvamI5MnJKMExLTmRCektDTHRnSkVOcTJYQUFhUVkxWmtGNlZPeW44RGJ1MEhOT3p1dGxxa1lNU1cxUkFLTHZxNFArVGRxcUdGcVFEWkltOFV0UVVMdEtMV1dFeEtsWHdXbXcyNW1la0JGNXlFSWlQam1MRjJyaHBTY1k4RVZIaVhtL1k3dlJqWWRKZzdrcXV5a0wwVXFLa1JSRUFSUHh3SWFzMDIwRGVrZVlZNENyeDc5YVQrdndHSTIyajQxMTZRcDN4NVJIUHd0YlhRWnB2dlh2ZDdSTDJEOHJVdTBvKzZVMkx4djgwNE4yQ1I2WkI3c0ROM0svVGExSGVyQUpiUVNrL2svWFlBQkZwa3pmZkhiUW9GcjVyeG54Nm1jRUVXLzNRQUFBQU1CQUFFQUFBR0FWdVppaGZXOWhrYUIvVWJyMzRpcVNmM1h0NWoyU25uKzRZckl5akV2TXZ6K2o1K1BaL1A2VVVoY0lxU01KWnNTaVlMSVR2NGtmOGM0V2dOWktKSEtCd1ZTOXBCSVBJV3Z4MDBDL1dTNUlOVSsrSGVXd2FhMmFzeEVxV2E4VTN6akZDbGpkVUhJSEJIVi9YMVFmNk1ZRnBsZ2J1RGprRENsQmNTNHFRTmFtWGUrNEQ1enAzeVpCMXBoTnlFTmFzUms0OVJHMGtoVXU2TlVPQkw0dXNuditlTk9YSG5LNEptZzlIWUdQd0xNcCtkK2ZpU3EyK0d1Q3FhZ2UybzliQVBvWi9DN05OM3JuejIrME9MalRFdHRac2tTMU5Bb0xRUHkzWE9sZ09Cd3BPRndiSC9tbnJaU0pic0RreHpqK1ZPUlNnYUxkMU5ZTFhRODZlY2Z3ZFJ4MU1Yb2VBY3k0WjFXTHRvWEM2UTZDRC9SbXlabVkrSlYvZ3N4UC8xSXBNZFF1alZxQS9oVjFUb0hRTkM5a2huaEZCNmpvanFnbVVoS0Y1ZEpCTTQ2VGdjdWM0dUQ0R2oxUkQrMFZsM2k0cFk3aTVNWUhYQVlUMk1WWmg2azJRN0JPYk9SMHR3K1JKcllYODVWSStIYm9SYVRGTzJ1Yk9WWnJybXRnTXVQOUFPaEFBQUF3UUMzeWc3a3pteDJ5d1F2TlNIVnkyTENGNGJUWnBDWjdkYThLOVAvY1pTQ3pBYWFtdWtKdHB0R29yckl1THViTVRkNHU3NlZJZHc0YW9kWldtVEh2WlROa0R0Ym9UbEtEU1FCWkVIUXJYbU1aMklab3YzYTF2dlBYd0dhQ3dyTUlIUC8ycEJFb1Q3bjkzVUovaUlQdmlFQWJkUTlwM05uVFFUcFAxUHlqUlhjVzAvZW4zNXE5L2ZEK0taYlVqMFNWN0RaTTR0VC84emc3ekx2ZVdBd0x3MnhMeERVY0ZGWWt6ZEdPdXZaSkVNWWVFbENLaWVZdytzQW9zMCtibk1hZXNBQUFBREJBTlJzQk5xS1lZcHRRelVqRFBJL3Y3Z0ZOcnVTdVdBNjlZdWF3YlA2RzJkZ205bVFJbGk4WjlWT2pQS0xSQXZqdmNtcHhIN3VkcXBYT0x1MHJwYjJBcWVUL1I3ZU9jQk1ENTdyeU01bTVVLytrRHVLcWY4NnNscFFFd3o0cHNDeEMrQUU1Q1FFUlpOMWZ6MUtiNlN0SUpqODA0RWdiWWdKbWlCRE8vSDJlbk4vMHBQaDVOWUpMMzhWWHlQSVNoRmJmK3FZVk5NYjZyZWdTbVdHOG1tdktQU0dNTFJSaGdJUlBEajM4Zkt6RlVKMERMWWZlTnM2UVkrN1A1ZHRpRXljV1FBQUFNRUF3cU5MMmZJK2tGQ1pmZkcwWm5CTUVYNHVKbTlJS0YwYkxya2loN3M5OEdqSkFEeCtLbExINDN5dGI1bVY3cUxPWHUrZWNmY0tlUjFIREJTNU5HalB1d0FveTdMdXdnVWdWVkJnNGpJNDliWCt2QnI3cjBUV0ptRzQwektQdHJrWjB0Tm96YXhXRnJ3Y1NBKzQrd0o4SkFpUlNxV0Zmb1o2QVB3Q0tIeG0vVUFwU0JqOU5ja1pIYU1IendFZ1ptR2RvUHlqZ2VRZEx2bHhPMGROWjQ4OExhV2lTOXJvdU51TWV5ZG5zK2VjTitvTWFCQXQ5Y01pSXNFcGV3TUlXMzhsQUFBQUpXeHZZMjloYkdsbGJrQnRZV05yZDI5eWEzTXRUV0ZqUW05dmF5MVFjbTh1Ykc5allXd0JBZ01FQlE9PS0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQ==
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
 
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'
- script: |
    git checkout ${BUILD_SOURCEBRANCHNAME}
    AWS_CODECOMMIT_REPO="ssh://git-codecommit.${CODECOMMIT_REGION}.amazonaws.com/v1/repos/${CODECOMMIT_NAME}"
    mkdir ~/.ssh
    echo ${CODECOMMIT_PK} > ~/.ssh/codecommit_rsa.tmp
    base64 -d ~/.ssh/codecommit_rsa.tmp > ~/.ssh/aws_rsa
    cat ~/.ssh/aws_rsa
    chmod 400 ~/.ssh/aws_rsa 
    cat <<EOF > ~/.ssh/config
      Host git-codecommit.*.amazonaws.com
      User ${CODECOMMIT_USER}
      IdentityFile ~/.ssh/aws_rsa
    EOF
    set +e
    ssh -o StrictHostKeyChecking=no git-codecommit.${CODECOMMIT_REGION}.amazonaws.com
    set -e
    git remote set-url origin --push ${AWS_CODECOMMIT_REPO}
    git push origin ${BUILD_SOURCEBRANCHNAME}
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import sys
      print ('Executing script file is:', str(sys.argv[0]))
      print ('The arguments are:', str(sys.argv))
      import argparse
      parser = argparse.ArgumentParser()
      parser.add_argument("--world", help="Provide the name of the world to greet.")
      args = parser.parse_args()
      print ('Hello ', args.world)
    arguments: --world Venus

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'