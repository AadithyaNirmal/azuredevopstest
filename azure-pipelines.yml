# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- dev

pool:
  vmImage: 'ubuntu-latest'
name: ${Date:yyyMMdd}${Rev:.r}
variables:
  - group: aws_variables
  - name: CODECOMMIT_PK
    value: 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
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
 
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'
- script: |
    git checkout ${BUILD_SOURCEBRANCHNAME}
    AWS_CODECOMMIT_REPO="ssh://git-codecommit.${CODECOMMIT_REGION}.amazonaws.com/v1/repos/${CODECOMMIT_NAME}"
    mkdir ~/.ssh
    echo ${CODECOMMIT_PK} > ~/.ssh/codecommit_rsa.tmp
    base64 -d ~/.ssh/codecommit_rsa.tmp > ~/.ssh/aws_rsa
    cat ~/.ssh/aws_rsa
    chmod 400 ~/.ssh/aws_rsa 
    cat <<EOF > ~/.ssh/config
      Host git-codecommit.*.amazonaws.com
      User ${CODECOMMIT_USER}
      IdentityFile ~/.ssh/aws_rsa
    EOF
    echo ${CODECOMMIT_USER}
    set +e
    ssh -o StrictHostKeyChecking=no git-codecommit.${CODECOMMIT_REGION}.amazonaws.com
    set -e
    git remote set-url origin --push ${AWS_CODECOMMIT_REPO}
    git push origin ${BUILD_SOURCEBRANCHNAME}
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import sys
      print ('Executing script file is:', str(sys.argv[0]))
      print ('The arguments are:', str(sys.argv))
      import argparse
      parser = argparse.ArgumentParser()
      parser.add_argument("--world", help="Provide the name of the world to greet.")
      args = parser.parse_args()
      print ('Hello ', args.world)
    arguments: --world Venus

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'